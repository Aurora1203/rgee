% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_image.R
\name{stars_as_ee}
\alias{stars_as_ee}
\title{Convert an stars object to an EE object}
\usage{
stars_as_ee(x, assetId, monitoring = TRUE, bucket = NULL, quiet = FALSE)
}
\arguments{
\item{x}{stars object to be converted into a ee$Image.}

\item{assetId}{Destination asset ID for the uploaded file.}

\item{monitoring}{If TRUE the exportation task will be monitored.}

\item{bucket}{name you want this session to use by default,
or a bucket object.}

\item{quiet}{Logical. Suppress info message.}
}
\value{
An ee$Image object
}
\description{
Convert an stars object to an EE object
}
\details{
The process to pass a sf object to Earth Engine Asset could be carried
out by three different strategies. These are controlled by the "via"
parameter. The first method implemented is 'getInfo'. In this method the
sf objects are transformed to GeoJSON using \link[geojsonio]{geojson_json}
and then encrusted in an HTTP request using the server-side objects that are
implemented in the Earth Engine API (e.g. ee$Geometry$*). If the sf object
is too large (>1Mb) it is likely to cause bottlenecks and plodding
connections. One advantage of this method is that it create temporary files
and will not be saved in your Earth Engine Asset. See
\href{https://developers.google.com/earth-engine/client_server}{Client
vs Server} documentation for more details. The second method implemented is
'toasset'. It is similar to the previous one, with the difference that
the spatial object will be saved in your Earth Engine Asset. For dealing
with very large spatial objects, it is preferable to use the third method
called 'gcs'. In this method, firstly, the sf object will be saved as a
*.shp in the  /temp directory. Secondly, using the function ee_local_to_gcs
will move the shapefile from local to Google Cloud Storage. Finally, using
the function ee_gcs_to_asset_table it will be loaded to the Earth Engine
Asset.
}
\examples{
\dontrun{
library(rgee)
library(stars)
ee_Initialize(gcs = TRUE)

# Get the filename of a image
tif <- system.file("tif/L7_ETMs.tif", package = "stars")
x <- read_stars(tif)
asset_id <- sprintf("\%s/\%s",ee_get_assethome(),'stars_l7')

# Method 1
# 1. Move from local to gcs
gs_uri <- ee_local_to_gcs(x = tif, bucket = 'rgee_dev')

# 2. Pass from gcs to asset
ee_gcs_to_asset_image(
  x = x,
  gs_uri = gs_uri,
  asset_id = asset_id
)

# OPTIONAL: Monitoring progress
ee_monitoring()

# OPTIONAL: Display results
ee_stars_01 <- ee$Image(asset_id)
Map$centerObject(ee_stars_01)
Map$addLayer(ee_stars_01)

# Method 2
ee_stars_02 <- stars_as_ee(x = x,
                           assetId = asset_id,
                           bucket = "rgee_dev")
Map$centerObject(ee_stars_02)
Map$addLayer(ee_stars_02)
}
}
