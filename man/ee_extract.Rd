% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_extract.R
\name{ee_extract}
\alias{ee_extract}
\title{Extract values from EE Images or ImageCollections objects}
\usage{
ee_extract(x, y, fun = ee$Reducer$mean(), scale = 1000, sf = FALSE, ...)
}
\arguments{
\item{x}{EE Image or ImageCollection.}

\item{y}{ee$Geometry$*, ee$Feature, ee$FeatureCollection or sf objects.}

\item{fun}{ee$Reducer object. Function to summarize the values. The function
should take a single numeric vector as argument and return a single value.
See details.}

\item{scale}{A nominal scale in meters of the Image projection to work in.
By default 1000.}

\item{sf}{Logical. Should the extracted values be added to the data.frame of
the sf object y? This only applies if y is a sf object.}

\item{...}{reduceRegions additional parameters. See
ee_help(ee$Image()$reduceRegions) for more details.}
}
\description{
Extract values from a \code{ee$Image} or \code{ImageCollection} at the
locations of a geometry object. You can use \code{ee$Geometry$*},
\code{ee$Feature}, \code{ee$FeatureCollection} and sf objects. This function
try to mimics how \link[raster]{extract} currently works.
}
\details{
In Google Earth Engine the reducer functions that return one value are:
\itemize{
\item  \strong{allNonZero}: Returns a Reducer that returns 1 if all of its
inputs are non-zero, 0 otherwise. \cr
\item \strong{anyNonZero}: Returns a Reducer that returns 1 if any of its
inputs are non-zero, 0 otherwise. \cr
\item \strong{bitwiseAnd}: Returns a Reducer that computes the bitwise-and
summation of its inputs.
\item \strong{bitwiseOr}: Returns a Reducer that computes the bitwise-or
summation of its inputs.
\item \strong{count}: Returns a Reducer that computes the number of
non-null inputs.
\item \strong{first}: Returns a Reducer that returns the first of its inputs.
\item \strong{firstNonNull}: Returns a Reducer that returns the first of
its non-null inputs.
\item \strong{kurtosis}: Returns a Reducer that Computes the kurtosis of
its inputs.
\item \strong{last}: Returns a Reducer that returns the last of its inputs.
\item \strong{lastNonNull}: Returns a Reducer that returns the last of its
non-null inputs.
\item \strong{max}: Creates a reducer that outputs the maximum value of
its (first) input. If numInputs is greater than one, also outputs the
corresponding values of the additional inputs.
\item \strong{mean}: Returns a Reducer that computes the (weighted)
arithmetic mean of its inputs.
\item \strong{median}: Create a reducer that will compute the median of
the inputs. For small numbers of inputs (up to maxRaw) the median will be
computed directly; for larger numbers of inputs the median will be derived
from a histogram.
\item \strong{min}: Creates a reducer that outputs the minimum value
of its (first) input.  If numInputs is greater than one, also outputs
additional inputs.
\item \strong{mode}: Create a reducer that will compute the mode of the
inputs.  For small numbers of inputs (up to maxRaw) the mode will be
computed directly; for larger numbers of inputs the mode will be derived
from a histogram.
\item \strong{product}: Returns a Reducer that computes the product of
its inputs.
\item \strong{sampleStdDev}: Returns a Reducer that computes the sample
standard deviation of its inputs.
\item \strong{sampleVariance}: Returns a Reducer that computes the sample
variance of its inputs.
\item \strong{stdDev}: Returns a Reducer that computes the standard
deviation of its inputs.
\item \strong{sum}: Returns a Reducer that computes the (weighted) sum
of its inputs.
\item \strong{variance}: Returns a Reducer that computes the variance
of its inputs.
}
}
\examples{
library(rgee)
library(sf)

ee_reattach() # reattach ee as a reserved word
ee_Initialize()

# get monthly precipitation from terraclimate
terraclimate <- ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
  filterDate("2000-01-01", "2001-01-01")$
  map(function(x) x$select("pr"))

# extract values with polygons
nc <- st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE) \%>\%
  st_transform(4326)
ee_nc_rain <- ee_extract(
  x = terraclimate, y = nc, fun = ee$Reducer$max(),
  id = "FIPS"
)
ee_nc_rain <- merge(nc, ee_nc_rain, by = "FIPS")
plot(ee_nc_rain["X200006"],
  main = "2001 Jan Precipitation - Terraclimate",
  reset = FALSE
)

## plot time series
ee_nc <- ee_nc_rain
st_geometry(ee_nc) <- NULL
time_serie <- as.numeric(ee_nc[1, sprintf("X\%s", 200001:200012)])
main <- sprintf("2001 Precipitation - \%s", ee_nc$NAME[1])
plot(time_serie, ylab = "pp (mm/month)", type = "l", lwd = 1.5, main = main)
points(time_serie, pch = 20, lwd = 1.5, cex = 1.5)
}
