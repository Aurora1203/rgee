% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_as_sf.R
\name{ee_as_sf}
\alias{ee_as_sf}
\title{Convert Earth Engine (EE) Table in a Simple Feature (sf)}
\usage{
ee_as_sf(x)
}
\arguments{
\item{x}{ee.Geometry, ee.Feature or ee.FeatureCollection object to be converted into sf.}
}
\value{
An sf class object, see Details.
}
\description{
Convert Earth Engine (EE) Table in a Simple Feature (sf)
}
\details{
The type of sf object returned will depend on the input GeoJSON. Sometimes you will get
back a POINTS class, and sometimes a POLYGON class, etc., depending on what the structure of the GeoJSON.
The reading and writing of the CRS to/from geojson is inconsistent. You can directly set the CRS by passing
a valid PROJ4 string or epsg code to the crs argument in st_read.
}
\examples{
library(ee)
ee_Initialize()
roi <- ee$Geometry$Polygon(list(
  c(-122.27577209472656, 37.891247253777074),
  c(-122.27577209472656, 37.86875557241152),
  c(-122.24040985107422, 37.86875557241152),
  c(-122.24040985107422, 37.891247253777074)
))

blocks <- ee$FeatureCollection("TIGER/2010/Blocks")
subset <- blocks$filterBounds(roi)
sf_subset <- ee_as_sf(subset)
plot(sf_subset)
}
