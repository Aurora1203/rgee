% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_as_sf.R
\name{ee_as_sf}
\alias{ee_as_sf}
\title{Convert an EE table in a sf object}
\usage{
ee_as_sf(x, via = "getInfo", container = "rgee_backup",
  selectors = NULL, quiet = FALSE)
}
\arguments{
\item{x}{EE table to be converted into a sf object.}

\item{via}{Method to download the image. Three methods
are implemented 'getInfo', 'drive', and 'gcs'. See details.}

\item{container}{Relevant when the "via" argument is
defined as "drive" or "gcs". It is the name of a unique
folder ('drive') or bucket ('gcs') to be exported into.}

\item{selectors}{The list of properties to include in
the output, as a list of strings or a comma-separated
string. By default, all properties are included.}

\item{quiet}{logical. Suppress info message}
}
\value{
An sf object.
}
\description{
Convert an EE table in a sf object
}
\details{
The process to pass a ee$FeatureCollection, ee$Feature or ee$Geometry to
your local env could be carried out by three different strategies. The
first one ('getInfo') use the getInfo method, which fetch and return
information about Earth Engine objects, the advantage of use this strategy is
a direct and fast download. However, there is a limit of 5000 features
that can be transferred by request which makes it not recommendable for
large collections. The second ('drive') and third ('gcs') methods are
suitable for large images since it uses Google Drive and Google Cloud
Storage as intermediate containers.
}
\examples{
\dontrun{
library(rgee)
ee_reattach() # reattach ee as a reserved word
ee_Initialize(
  email = "data.colec.fbf@gmail.com",
  drive = TRUE,
  gcs = TRUE
)

# Region of interest
roi <- ee$Geometry$Polygon(list(
  c(-122.275, 37.891),
  c(-122.275, 37.868),
  c(-122.240, 37.868),
  c(-122.240, 37.891)
))

# TIGER: US Census Blocks Dataset
blocks <- ee$FeatureCollection("TIGER/2010/Blocks")
subset <- blocks$filterBounds(roi)
sf_subset <- ee_as_sf(x = subset)
plot(sf_subset)

# Create Random points in Earth Engine
region <- ee$Geometry$Rectangle(-119.224, 34.669, -99.536, 50.064)
ee_help(ee$FeatureCollection$randomPoints)
ee_randomPoints <- ee$FeatureCollection$randomPoints(region, 100)

# Download via GetInfo
sf_randomPoints <- ee_as_sf(ee_randomPoints)
plot(sf_randomPoints)

# Download via drive
sf_randomPoints_drive <- ee_as_sf(
  x = ee_randomPoints,
  via = 'drive'
)

# Download via GCS
sf_randomPoints_gcs <- ee_as_sf(
  x = subset,
  via = 'gcs',
  container = 'rgee_dev'
)
}
}
