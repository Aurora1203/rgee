% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sf_as_ee.R
\name{sf_as_ee}
\alias{sf_as_ee}
\alias{sf_as_ee.character}
\alias{sf_as_ee.sf}
\alias{sf_as_ee.sfc}
\alias{sf_as_ee.sfg}
\title{Convert an sf object to EE object}
\usage{
sf_as_ee(x, check_ring_dir)

\method{sf_as_ee}{character}(x, check_ring_dir = FALSE, ...)

\method{sf_as_ee}{sf}(x, check_ring_dir = FALSE)

\method{sf_as_ee}{sfc}(x, check_ring_dir = FALSE)

\method{sf_as_ee}{sfg}(x, check_ring_dir = FALSE)
}
\arguments{
\item{x}{sf object to be converted into a EE object.}

\item{check_ring_dir}{logical. see \link[sf]{st_read}.}

\item{...}{\link[sf]{st_read} arguments might be included.}
}
\description{
Convert an sf object to EE object
}
\details{
The conversion from sf to EE is a two-step process. Firstly, \code{sf_as_ee} transform
sf objects into a GeoJSON format using \link[geojsonio]{geojson_json}. Secondly, the GeoJSON
generated will be encrusted in an HTTP request using the server-side objects (ee$Geometry$*).
If the sf object is large spatial objects (>1Mb) it is expected that cause bottlenecks and
plodding connections. See
\href{https://developers.google.com/earth-engine/client_server#client-and-server-functions}{Client vs Server}
documentation for details. For leading with very large spatial objects, is recommended firstly
importing it to the GEE assets. See \link[rgee]{ee_upload} for creating uploading pipelines.
}
\examples{
library(rgee)
library(sf)
ee_Initialize()

# sf
x <- st_read(system.file("shape/nc.shp", package = "sf")) \%>\% st_transform(4326)
ee_x <- sf_as_ee(x, check_ring_dir = TRUE)
ee_map(ee_x)
# sfc
x <- st_read(system.file("shape/nc.shp", package = "sf"))$geometry \%>\% st_transform(4326)
ee_x <- sf_as_ee(x, check_ring_dir = TRUE)
ee_map(ee_x)
# sfg
x <- st_read(system.file("shape/nc.shp", package = "sf"))$geometry[[1]]
ee_x <- sf_as_ee(x, check_ring_dir = TRUE)
ee_map(ee_x)
}
