% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_as_thumbnail.R
\name{ee_as_thumbnail}
\alias{ee_as_thumbnail}
\title{Create a stars object based on an EE thumbnail image}
\usage{
ee_as_thumbnail(x, region, dimensions, vizparams = NULL, crs = 4326,
  quiet = FALSE)
}
\arguments{
\item{x}{EE Image object}

\item{region}{EE Geometry Rectangle (ee$Geometry$Rectangle)}

\item{dimensions}{A number or pair of numbers in format XY.}

\item{vizparams}{A list that contains the visualization parameters.}

\item{crs}{The EE Image projection e.g. 'EPSG:3857'. Defaults to WGS84 ('EPSG:4326').}

\item{quiet}{logical; suppress info messages.}
}
\value{
An \link[sf]{sf} object
}
\description{
Download EE thumbnail images and read them as stars objects.
This function is a wrapper around \code{ee$Image()$getThumbURL()}.
}
\details{
The argument dimensions will define the "from" & "to" parameters of the stars object.
It must be a single numeric value or a two-element vector. If not defined,
256 is taken by default as the dimension of x (from 1 to 256), and y will
be computed by proportional scaling. Huge images might cause plodding connections.
See \href{https://developers.google.com/earth-engine/client_server#client-and-server-functions}{Client vs Server}
for details.

The vizparams set up the number of bands. In \code{ee_as_thumbnail} just is possible export one (G) or
three band (RGB) images, additional  parameters can be passed on to control color, intensity,
the max(min) value, etc. See below for a more compressible list of all the parameters that admit
\code{ee_as_thumbnail}.

\tabular{lll}{
\strong{Parameter}\tab \strong{Description}\tab\strong{Type}\cr
\strong{bands}     \tab  Comma-delimited list of three band names to be mapped to RGB                \tab  list                                               \cr
\strong{min}       \tab  Value(s) to map to 0                                                        \tab  number or list of three numbers, one for each band \cr
\strong{max}       \tab  Value(s) to map to 1                                                      \tab  number or list of three numbers, one for each band \cr
\strong{gain}      \tab  Value(s) by which to multiply each pixel value                              \tab  number or list of three numbers, one for each band \cr
\strong{bias}      \tab  Value(s) to add to each Digital Number (DN) value                           \tab  number or list of three numbers, one for each band \cr
\strong{gamma}     \tab  Gamma correction factor(s)                                                  \tab  number or list of three numbers, one for each band \cr
\strong{palette}  \tab  List of CSS-style color strings (single-band images only)                   \tab  comma-separated list of hex strings                \cr
\strong{opacity}   \tab  The opacity of the layer (0.0 is fully transparent and 1.0 is fully opaque) \tab  number \cr
}

Use \code{ee$Image()$geometry()$projection()$crs()$getInfo()} for getting the CRS of an Earth Engine Image.
}
\examples{
library(rgee)
library(stars)

ee_reattach() # reattach ee as a reserve word
ee_Initialize()
nc <- st_read(system.file("shp/arequipa.shp", package = "rgee"))
dem_palette <- c(
  "#008435", "#1CAC17", "#48D00C", "#B3E34B", "#F4E467",
  "#F4C84E", "#D59F3C", "#A36D2D", "#C6A889", "#FFFFFF"
)
ndvi_palette <- c(
  "#FC8D59", "#FC8D59", "#FC9964", "#FED89C", "#FFFFBF",
  "#FFFFBF", "#DAEF9F", "#9DD46A", "#91CF60", "#91CF60"
)
# Example 01  - SRTM AREQUIPA-PERU
image <- ee$Image("CGIAR/SRTM90_V4")
region <- nc$geometry[[1]] \%>\%
  st_bbox() \%>\%
  st_as_sfc() \%>\%
  st_set_crs(4326) \%>\%
  sf_as_ee()
arequipa_dem <- ee_as_thumbnail(x = image, region = region, vizparams = list(min = 0, max = 5000))
arequipa_dem <- arequipa_dem * 5000
plot(arequipa_dem[nc], col = dem_palette, breaks = "equal", reset = FALSE, main = "SRTM - Arequipa")
suppressWarnings(plot(nc, col = NA, border = "black", add = TRUE, lwd = 1.5))
}
