% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_as_thumbnail.R
\name{ee_as_thumbnail}
\alias{ee_as_thumbnail}
\title{Create a stars object based on an EE thumbnail image}
\usage{
ee_as_thumbnail(x, region, dimensions, vizparams = NULL,
  geodesic = NULL, evenOdd = NULL, quiet = FALSE)
}
\arguments{
\item{x}{EE Image object}

\item{region}{EE Geometry Rectangle (ee$Geometry$Rectangle). The
CRS needs to be the same as the x argument, otherwise, it will be
forced. If not specified, image bounds will be taken.}

\item{dimensions}{A number or pair of numbers in format XY.}

\item{vizparams}{A list that contains the visualization parameters.}

\item{geodesic}{Whether line segments of region should be interpreted as
spherical geodesics. If FALSE, indicates that line segments should be
interpreted as planar lines in the specified CRS. If not specified in
the geometry (region argument), defaults to TRUE if the CRS is geographic
(including the default EPSG:4326), or to FALSE if the CRS is projected.}

\item{evenOdd}{If TRUE, polygon interiors will be determined by
the even/odd rule, where a point is inside if it crosses an odd
number of edges to reach a point at infinity. Otherwise polygons
use the left-inside rule, where interiors are on the left side
of the shell's edges when walking the vertices in the given order.
If unspecified in the geometry (region argument) defaults to TRUE.}

\item{quiet}{logical; suppress info messages.}
}
\value{
An \link[sf]{sf} object
}
\description{
Download EE thumbnail images and read them as star objects.
This function is a wrapper around \code{ee$Image()$getThumbURL()}.
}
\details{
The argument dimensions will define the stars object parameters
"from" & "to". It must be a single numeric value or a two-element vector.
If not defined, 256 is taken by default as the dimension of x
(from 1 to 256), and y scales down proportionally. Large images
might cause plodding connections. See
\href{https://developers.google.com/earth-engine/client_server}{Client vs
Server} for more details.

The vizparams set up the number of bands up. In \code{ee_as_thumbnail} just is
possible export only one (G) or three-band (RGB) images. Additional
parameters can be passed on to control color, intensity, the maximum and
minimum values, etc. The below table provides all the parameters that
admit \code{ee_as_thumbnail}.

\tabular{lll}{
\strong{Parameter} \tab \strong{Description} \tab \strong{Type}\cr
\strong{bands}     \tab Comma-delimited list of
three band names to be mapped to RGB \tab  list \cr
\strong{min}       \tab  Value(s) to map to 0 \tab
number or list of three numbers, one for each band \cr
\strong{max}       \tab  Value(s) to map to 1 \tab
number or list of three numbers, one for each band \cr
\strong{gain}      \tab  Value(s) by which to multiply each pixel value \tab
number or list of three numbers, one for each band \cr
\strong{bias}      \tab  Value(s) to add to each Digital Number (DN)
value \tab number or list of three numbers, one for each band \cr
\strong{gamma}     \tab  Gamma correction factor(s) \tab
number or list of three numbers, one for each band \cr
\strong{palette}  \tab  List of CSS-style color strings
(single-band images only) \tab  comma-separated list of hex strings \cr
\strong{opacity}   \tab  The opacity of the layer
(0.0 is fully transparent and 1.0 is fully opaque) \tab
number \cr
}

Use \code{ee$Image()$geometry()$projection()$crs()$getInfo()} for
getting the CRS of an Earth Engine Image.
}
\examples{
\dontrun{
library(raster)
library(stars)
library(rgee)
ee_reattach() # reattach ee as a reserved word
ee_Initialize()
nc <- st_read(system.file("shp/arequipa.shp", package = "rgee"))
dem_palette <- c(
  "#008435", "#1CAC17", "#48D00C", "#B3E34B", "#F4E467",
  "#F4C84E", "#D59F3C", "#A36D2D", "#C6A889", "#FFFFFF"
)

# DEM data -SRTM v4.0
image <- ee$Image("CGIAR/SRTM90_V4")
region <- nc \%>\%
  st_bbox() \%>\%
  st_as_sfc() \%>\%
  st_set_crs(4326) \%>\%
  sf_as_ee() \%>\%
  ee$FeatureCollection$geometry()

## world
world_dem <- ee_as_thumbnail(
  x = image,
  dimensions = 1024,
  geodesic = FALSE,
  vizparams = list(min = 0, max = 5000)
)
world_dem[world_dem <= 0] <- NA
world_dem <- world_dem * 5000
plot(
  x = world_dem, col = dem_palette, breaks = "equal",
  reset = FALSE, main = "SRTM - World"
)

## Arequipa-Peru
arequipa_dem <- ee_as_thumbnail(
  x = image,
  dimensions = 512,
  region = region,
  vizparams = list(min = 0, max = 5000)
)
arequipa_dem <- arequipa_dem * 5000
plot(
  x = arequipa_dem[nc], col = dem_palette, breaks = "equal",
  reset = FALSE, main = "SRTM - Arequipa"
)
suppressWarnings(plot(
  x = nc, col = NA, border = "black", add = TRUE,
  lwd = 1.5
))

## LANDSAT 8
img <- ee$Image("LANDSAT/LC08/C01/T1_SR/LC08_038029_20180810")$
  select(c("B4", "B3", "B2"))
Map$centerObject(img)
Map$addLayer(img, list(min = 0, max = 5000, gamma = 1.5))

## Teton Wilderness
l8_img <- ee_as_thumbnail(
  x = img,
  dimensions = 1024,
  vizparams = list(
    min = 0,
    max = 5000,
    gamma = 1.5
  )
)
dev.off()
l8_img \%>\%
  as("Raster") \%>\%
  `names<-`(c("R", "G", "B")) \%>\%
  plotRGB(stretch = "lin")
}
}
