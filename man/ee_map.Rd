% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_map.R
\name{ee_map}
\alias{ee_map}
\title{Adds a given EE object to mapview as a layer.}
\usage{
ee_map(eeobject, vizparams, center, zoom_start = 8, max_nimage = 10,
  obj_name = "map", ...)
}
\arguments{
\item{eeobject}{ee$Feature,ee$FeatureCollection, ee$Image or ee$ImageCollection.}

\item{vizparams}{list; visualization parameters. See Details.}

\item{center}{character vector; the longitude and latitude of the map center.}

\item{zoom_start}{zoom level.}

\item{max_nimage}{Max number of Image to display (Only relevant for ee$ImageCollection objects).}

\item{obj_name}{character vector; name of the map(or maps).}

\item{...}{additional \code{\link[mapview]{mapview}} arguments could be passed.}
}
\description{
Display a given EE object (ee$Image, ee$Feature, ee$FeatureCollection
or ee$ImageCollection) using the \code{\link[mapview]{mapview}} style.
}
\details{
\code{ee_map} takes advantage of the \code{ee$*$getMapId(self,vis_params=NULL)} function for generating a provisial
WMS service supported by Google Earth Engine. To achieve desirable visualization effects, you can
provide visualization parameters to ee_map by the parameter vizparams. The
\href{https://developers.google.com/earth-engine/image_visualization}{parameters} available are:

\tabular{lll}{
\strong{Parameter}\tab \strong{Description}\tab\strong{Type}\cr
\strong{bands}     \tab  Comma-delimited list of three band names to be mapped to RGB                \tab  list                                               \cr
\strong{min}       \tab  Value(s) to map to 0                                                        \tab  number or list of three numbers, one for each band \cr
\strong{max}       \tab  Value(s) to map to 255                                                      \tab  number or list of three numbers, one for each band \cr
\strong{gain}      \tab  Value(s) by which to multiply each pixel value                              \tab  number or list of three numbers, one for each band \cr
\strong{bias}      \tab  Value(s) to add to each DN                                                  \tab  number or list of three numbers, one for each band \cr
\strong{gamma}     \tab  Gamma correction factor(s)                                                  \tab  number or list of three numbers, one for each band \cr
\strong{palette}  \tab  List of CSS-style color strings (single-band images only)                   \tab  comma-separated list of hex strings                \cr
\strong{opacity}   \tab  The opacity of the layer (0.0 is fully transparent and 1.0 is fully opaque) \tab  number                                             \cr
\strong{format}    \tab  Either "jpg" or "png"                                                       \tab  string \cr
}

If you add a layer to the map without any additional parameters, by default the
\code{ee_map} assigns the first three bands to red, green and blue, respectively.
The default stretch is based on the type of data in the band (e.g. floats are
stretched in <0,1>, 16-bit data are stretched to the full range of possible values),
which may or may not be suitable.
}
\examples{
\dontrun{
library(rgee)
ee_initialize()

#Ploting an ee_FeatureColletion
eeobject <- ee_FeatureCollection('users/csaybar/DLdemos/train_set')
center <- eeobject$geometry()$centroid()$getInfo()$coordinates
vizparams = list(color='FF0000', strokeWidth=5)
ee_map(eeobject,vizparams,center,obj_name = "Arequipa-landuse")

#Ploting an ee_Image
collection = ee_ImageCollection('LANDSAT/LC08/C01/T1_TOA')$
 filter(ee_Filter()$eq('WRS_PATH', 44))$
 filter(ee_Filter()$eq('WRS_ROW', 34))$
 filterDate('2014-01-01', '2015-01-01')$
 sort('CLOUD_COVER')

eeobject = collection$median()
vizparams = list(bands=c('B4', 'B3', 'B2'),max=0.3)
center = c(-122.3578,37.7726)
ee_map(eeobject,vizparams,center,obj_name = 'SF')

#Ploting an ee_ImageColection
ee_map(collection,vizparams,center,obj_name = c('SF1',"SF2","SF3"),max_nimage = 3)
}
}
