% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_upload.R
\name{ee_upload}
\alias{ee_upload}
\alias{ee_upload.character}
\alias{ee_upload.sf}
\alias{ee_upload.stars}
\alias{ee_upload.stars_proxy}
\title{Upload sf or stars objects into a GEE asset}
\usage{
ee_upload(x, ...)

\method{ee_upload}{character}(x, ..., filename, bucket = NULL,
  properties = NULL, start_time = "1970-01-01",
  end_time = "1970-01-01",
  selenium_params = getOption("rgee.selenium.params"), clean = FALSE,
  reinit = FALSE, quiet = FALSE)

\method{ee_upload}{sf}(x, ..., filename, bucket = NULL,
  selenium_params = getOption("rgee.selenium.params"), clean = FALSE,
  reinit = FALSE, quiet = FALSE)

\method{ee_upload}{stars}(x, ..., filename, bucket = NULL,
  properties = NULL, start_time = "1970-01-01",
  end_time = "1970-01-01",
  selenium_params = getOption("rgee.selenium.params"), clean = FALSE,
  reinit = FALSE, quiet = FALSE)

\method{ee_upload}{stars_proxy}(x, ..., filename, bucket = NULL,
  properties = NULL, start_time = "1970-01-01",
  end_time = "1970-01-01",
  selenium_params = getOption("rgee.selenium.params"), clean = FALSE,
  reinit = FALSE, quiet = FALSE)
}
\arguments{
\item{x}{Character, sf or stars object to upload into a GEE asset.}

\item{...}{ignored}

\item{filename}{Character. Asset destination path,
e.g. users/pinkiepie/myponycollection.}

\item{bucket}{bucketname you are uploading to. See details.}

\item{properties}{List. Set of parameters to established as a property of
an EE object. See details.}

\item{start_time}{Character. The timestamp associated with the asset. The
initial time stamp is set to the nominal image acquisition time for single
scenes.}

\item{end_time}{Character. Useful for assets that correspond to an
interval of time. The ending time stamp is set to the nominal image
acquisition time for single scenes.}

\item{selenium_params}{List. Optional parameters when bucket is NULL.
Parameters for setting selenium. See details.}

\item{clean}{Logical; whether is TRUE cache will cleaned, see Description.}

\item{reinit}{Logical; run ee_Initialize(gcs=TRUE) before start to upload}

\item{quiet}{Logical. Suppress info message.}
}
\description{
Upload either images or vectors to Google Earth Engine asset
}
\details{
It is necessary, for uploading process, get authorization to read & write
into a Google Cloud Storage (GCS) bucket. Earth Engine provides a
provisional for free space into GCS through gs://earthengine-uploads/. If
the bucket argument is absent, this function will use Selenium driver for
getting access to the URI mentioned bellow, see \link{ee_upload_file_to_gcs}
for details. Install and check the Selenium drivers for Google Chrome is
possible as follow:\cr
\itemize{
\item rgee::ee_install_drivers()\cr
\item rgee::ee_check_drivers()\cr
}

The properties argument is just available for image uploads, is you are
interesting in setting properties in FeatureCollection. Please use
\link{ee_manage_set_properties} after \link{ee_upload}.

The selenium_params argument is a three-element list consisting of:\cr
\itemize{
\item gmail_account: The google account. If it is not specified, it will
obtained from ee$data$getAssetRoots().\cr
\item showpassword: Logical. After put the google account into
\link[getPass]{getPass}, should be shown?.
\item cache: Logical. TRUE will use the cookies saved on the /temp directory.
}

With respect to the variables time_start and time_end, both needs
to be specified as seconds since the epoch (1970-01-01). Assumed to
be in the UTC time zone.
}
\examples{
library(rgee)
library(stars)
library(sf)

username <- 'aybar1994' #change according to username.
gcs_bucket <- 'bag_csaybar'
ee_check_drivers()
ee_Initialize(user_gmail = username, gcs = TRUE)

# Create a folder in Earth Engine Asset
filename <- sprintf("users/\%s/rgee_upload/", username)
ee_manage_create(filename)

# Select image to upload
tif = system.file("tif/geomatrix.tif", package = "stars")
geomatrix = read_stars(tif) \%>\% st_warp(crs=st_crs(4326))

# Upload to earth egnine
ee_upload(x = geomatrix,
          filename = paste0(filename,"geomatrix"),
          bucket = gcs_bucket)

# Read uploaded image
asset_geomatrix <- paste0(filename,"geomatrix")
ee_geomatrix <- ee$Image(asset_geomatrix)
ee_map(ee_geomatrix, zoom_start = 18)
## OPTIONAL: add properties
ee_manage_set_properties(
  path_asset = asset_geomatrix,
  properties = list(message='hello-world',language = 'R'))

# Clean EE asset and GCS
ee_manage_delete(dirname(asset_geomatrix))
googleCloudStorageR::gcs_global_bucket(gcs_bucket)
buckets <- googleCloudStorageR::gcs_list_objects()
mapply(googleCloudStorageR::gcs_delete_object, buckets$name)
}
