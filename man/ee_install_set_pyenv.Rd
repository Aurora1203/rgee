% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_install.R
\name{ee_install_set_pyenv}
\alias{ee_install_set_pyenv}
\title{Set the Python environment to be used on rgee}
\usage{
ee_install_set_pyenv(
  python_path,
  python_env = NULL,
  automatic_pyenv = TRUE,
  install = FALSE,
  confirm = interactive()
)
}
\arguments{
\item{python_path}{The path to a Python interpreter, to be used with rgee.}

\item{python_env}{The name of, or path to, a Python virtual environment. If
not defined will estimate from the path.}

\item{automatic_pyenv}{Logical. Search automatically in the python_path the
python_env. Ignore when the \code{python_env} argument is not NULL. By
default TRUE.}

\item{install}{if TRUE, rgee will save the Python interpreter path and
the virtual environment name in the \code{.Renviron} file
for use in future sessions. Defaults to FALSE.}

\item{confirm}{Logical. Confirm if restart R when the 'install'
argument is TRUE.}
}
\description{
Set the Python environment to be used on rgee
}
\details{
It is necessary to restart R to observe change when setting a
different Python version. ee_install_set_pyenv will ask you to restart R.
}
\examples{
\dontrun{
#' library(rgee)

### rgee installation

# 1. Initialize rgee with ee_Initialize(). If there is no any Python environment, miniconda
# will be installed by default.
ee_Initialize()

# 2. Create a Python environment, e.g. ee.
pyenv <- ee_install_create_pyenv(python_env = "ee")

# Find others Python environments in the system.
ee_install_discover_pyenvs()

# 3. Set a Python environment (e.g. ee) and restart R to see changes.
ee_install_set_pyenv(pyenv, install = TRUE)

# 4. Install Python package dependencies and restart R to see changes.
ee_install_python_packages()

# 5. Initialize rgee again!
ee_Initialize()
}
}
