% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_install.R
\name{ee_install_python_packages}
\alias{ee_install_python_packages}
\title{Install rgee Python packages dependencies}
\usage{
ee_install_python_packages(
  method = c("auto", "virtualenv", "conda"),
  conda = "auto",
  ee_version = NULL,
  envname = NULL,
  pip = TRUE,
  conda_python_version = "3.7",
  confirm = interactive(),
  ...
)
}
\arguments{
\item{method}{Installation method. By default, "auto" automatically
finds a method that will work in the local environment. Change the
default to force a specific installation method. Note that the
"virtualenv" method is not available on Windows (as this isn't
supported by rgee). Note also that since this command runs
without privilege the "system" method is available only on Windows.}

\item{conda}{Path to conda executable (or "auto" to find conda
using the PATH and other conventional install locations).}

\item{ee_version}{earthengine-api version to install. When
this argument is NULL (the default), the version with which
rgee was built will be installed.}

\item{envname}{Name of Python environment, or full path, which Python
packages are to be installed.}

\item{pip}{Logical. Use pip for package installation? This
is only relevant when Conda environments are used, as
otherwise packages will be installed from the
Conda repositories.}

\item{conda_python_version}{the Python version installed in the
created conda environment. Python 3.7 is installed by default.}

\item{confirm}{Logical. Confirm if restart R when the 'install'
argument is TRUE.}

\item{...}{other arguments passed to \link[=reticulate]{conda_install} or
\link[=reticulate]{virtualenv_install}.}
}
\description{
Install the necessary Python packages to be used in rgee.
}
\details{
It is neccessary restart R to observe change when
installing Python packages. rgee only is compatible with Python
version 3.5 >=.
}
\examples{
\dontrun{
#' library(rgee)

### Install rgee by steps

# 1. Initialize rgee with ee_Initialize(). If there is no any Python environment, miniconda
# will be installed by default.
ee_Initialize()

# 2. Create a Python environment, e.g. ee.
pyenv <- ee_install_create_pyenv(python_env = "ee")

# Find others Python environments in the system.
ee_install_discover_pyenvs()

# 3. Set a Python environment (e.g. ee) and restart R to see changes.
ee_install_set_pyenv(pyenv, install = TRUE)

# 4. Install Python package dependencies and restart R to see changes.
ee_install_python_packages()

# 5. Initialize rgee again!
ee_Initialize()
}
}
