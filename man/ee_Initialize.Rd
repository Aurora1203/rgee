% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_Initialize.R
\name{ee_Initialize}
\alias{ee_Initialize}
\title{Authenticate and Initialize Earth Engine}
\usage{
ee_Initialize(user_gmail = NULL, drive = FALSE, gcs = FALSE,
  assethome = NULL, checkpy = FALSE, quiet = FALSE)
}
\arguments{
\item{user_gmail}{optional. Allows user to target a specific Google identity.}

\item{drive}{logical. Whether TRUE the drive credential will cache
in the system.}

\item{gcs}{logical. Whether TRUE the Google Cloud Storage
credential will cache in the system.}

\item{assethome}{character. Home folder's name of you EE Assets.}

\item{checkpy}{logical. Check if the current Python version
of this system is admitted by rgee.}

\item{quiet}{logical. Suppress info messages.}
}
\description{
Authorize rgee to manage Earth Engine resource The \code{ee_initialize()} via web-browser asked to sign in
to your Google account and grant permission for managing google earth engine. This function is a wrapper around
\code{rgee::ee$Initialize()}.
}
\details{
\code{ee_Initialize()} give the possibility of authorize Google drive (googledrive)
and Google Cloud Storage (googlecloudStorageR). By default, rgee do not need to them,
these are just necessary for exportation and importation tasks. All the user credentials
are save in the folder \code{~/.config/earthengine/USERS/}, if a user is not specified
the parameters of the last session would be used.
}
\examples{
ee_reattach() # reattach ee as a reserve word

# Simple init
library(rgee)
ee_Initialize()

# Advanced init
expr <- ee_Initialize(user_gmail = 'aybar1994@gmail.com',
                      drive = TRUE,
                      gcs = TRUE,
                      checkpy = TRUE,
                      assethome = 'users/aybar1994')
}
