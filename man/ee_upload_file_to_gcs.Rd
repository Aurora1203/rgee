% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-upload.R
\name{ee_upload_file_to_gcs}
\alias{ee_upload_file_to_gcs}
\title{Upload local files to google cloud storage}
\usage{
ee_upload_file_to_gcs(x, bucket = NULL,
  selenium_params = getOption("rgee.selenium.params"), clean = FALSE,
  reinit = FALSE, quiet = FALSE)
}
\arguments{
\item{x}{filename (character), sf or stars object.}

\item{bucket}{bucketname you are uploading to}

\item{selenium_params}{List. Optional parameters when bucket is NULL. Parameters for setting selenium. See details.}

\item{clean}{Logical; Whether is TRUE cache will cleaned, see Details.}

\item{reinit}{Logical; run ee_Initialize(gcs=TRUE) before start to upload}

\item{quiet}{Logical. Suppress info message.}
}
\value{
Character indicating the full name of the x argument inside gs://earthengine-uploads/
}
\description{
Upload images or tables into google cloud storage for EE asset ingestion tasks.
}
\details{
It is necessary, for uploading process, get authorization to read & write into a Google Cloud Storage
(GCS) bucket. Earth Engine provides a provisional for free space into GCS through
gs://earthengine-uploads/. If the bucket argument is absent, this function will use Selenium driver
for getting access to the URI mentioned bellow. The process for getting access to gs://earthengine-uploads/
was written entirely in Python and is as follow:
\itemize{
\item{1. }{Connecting to https://code.earthengine.google.com/ through selenium.}
\item{2. }{Download all the cookies and saved in a request object.}
\item{3. }{Get the URL for ingest the data  temporarily.}
\item{4. }{Create the request headers.}
\item{5. }{Upload the x argument to GCS via POST request.}
}
}
